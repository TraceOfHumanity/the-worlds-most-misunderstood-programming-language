// Метод `localeCompare()` у JavaScript використовується для порівняння двох рядків з урахуванням мовних особливостей (локалі). Він дозволяє сортувати або порівнювати рядки відповідно до правил конкретної мови або культури.

// Синтаксис

// string1.localeCompare(string2, [locales], [options]);

// - string1 — рядок, до якого викликається метод.
// - string2 — рядок для порівняння.
// - locales *(опціонально)* — специфічна локаль (наприклад, `'en-US'`, `'uk-UA'`, `'de-DE'`).
// - options *(опціонально)* — об'єкт для налаштування параметрів порівняння.

// Повернене значення
// Метод повертає:
// -1 — якщо `string1` передує `string2`.
// 0 — якщо рядки вважаються рівними.
// 1 — якщо `string1` слідує за `string2`.

// Приклади використання

// 1. Базове порівняння

console.log("apple".localeCompare("banana")); // -1
console.log("banana".localeCompare("apple")); // 1
console.log("orange".localeCompare("orange")); // 0

// 2. Порівняння з урахуванням локалі

// Розглянемо приклад сортування з урахуванням локалі:

const names = ["äpfel", "banane", "orange", "Apfel"];
names.sort((a, b) => a.localeCompare(b, "de-DE"));
console.log(names); // ["Apfel", "äpfel", "banane", "orange"]

// У цьому прикладі сортування виконується за правилами німецької мови (`de-DE`), де `ä` і `a` можуть розглядатися як різні символи.

// 3. Ігнорування регістру

// Використання параметра `sensitivity` дозволяє налаштувати чутливість до регістру:

console.log("a".localeCompare("A", "en", {sensitivity: "base"})); // 0
console.log("a".localeCompare("A", "en", {sensitivity: "case"})); // 1

// - `sensitivity: 'base'` — ігнорує регістр і діакритичні знаки (літери `a`, `A`, `á`, `Á` вважаються рівними).
// - `sensitivity: 'case'` — враховує регістр.

// 4. Порівняння з числовим порядком

// За замовчуванням `localeCompare()` не враховує числовий порядок. Але за допомогою параметра `numeric: true` можна порівнювати рядки як числа:

const items = ["item2", "item10", "item1"];
items.sort((a, b) => a.localeCompare(b, undefined, {numeric: true}));
console.log(items); // ['item1', 'item2', 'item10']

// Параметри `options`

// Метод підтримує кілька параметрів у об'єкті `options`, що дозволяють налаштовувати поведінку:

// | Опція             | Опис                                             |
// |-------------------|--------------------------------------------------|
// | localeMatcher | `'best fit'` (за замовчуванням) або `'lookup'`   |
// | sensitivity   | `'base'`, `'accent'`, `'case'`, `'variant'`      |
// | numeric       | `true` або `false` (за замовчуванням)            |
// | caseFirst     | `'upper'`, `'lower'`, `'false'`                  |

// Приклад використання всіх опцій:

console.log(
  "a".localeCompare("A", "en-US", {
    sensitivity: "base",
    numeric: true,
    caseFirst: "upper",
  })
);

// Висновок
// Метод `localeCompare()` є потужним інструментом для порівняння та сортування рядків з урахуванням мовних та культурних особливостей. Він особливо корисний для локалізованих додатків, де потрібно враховувати різні алфавіти, регістр та числовий порядок.
